name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  python-uv:
    name: Python (uv)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-
            ${{ runner.os }}-uv-

      - name: Sync deps (dev)
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run -m pytest -q

      - name: Build sdist+wheel
        run: uv build

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/*

  nix:
    name: Nix devshell + Cachix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        shell: [py310, py311, py312, py313]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Nix (Determinate)
        uses: DeterminateSystems/nix-installer-action@main

      - name: Enable Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Use & push to Cachix (pybenchx)
        uses: cachix/cachix-action@v16
        with:
          name: pybenchx
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Flake check
        run: nix flake check

      - name: Build with devshell ${{ matrix.shell }}
        run: nix develop .#${{ matrix.shell }} -c uv build

      - name: Test with devshell ${{ matrix.shell }}
        run: nix develop .#${{ matrix.shell }} -c uv run -m pytest -q
