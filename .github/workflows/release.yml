name: Release (Nix + Cachix)

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Nix (Determinate)
        uses: DeterminateSystems/nix-installer-action@main

      - name: Use & (if token) push to Cachix (pybenchx)
        uses: cachix/cachix-action@v16
        with:
          name: pybenchx
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build artifacts (uv) inside devShell py312
        run: nix develop .#py312 -c uv build

      - name: Verify built version matches tag
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"      # e.g. v1.2.3
          VERSION="${TAG#v}"            # 1.2.3
          echo "Tag: $TAG -> Version: $VERSION"
          ls -la dist/

          shopt -s nullglob
          WHEELS=(dist/pybenchx-${VERSION}-*.whl)
          SDISTS=(dist/pybenchx-${VERSION}.tar.gz dist/pybenchx-${VERSION}-*.tar.gz)

          if [ ${#WHEELS[@]} -eq 0 ]; then
            echo "::error::Wheel com versão ${VERSION} não encontrado em dist/"
            exit 1
          fi
          if [ ${#SDISTS[@]} -eq 0 ]; then
            echo "::error::sdist com versão ${VERSION} não encontrado em dist/"
            exit 1
          fi
          echo "OK: artefatos batem com a versão do tag."

      - name: Publish to PyPI (uv)
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: nix develop .#py312 -c uv publish --token "$PYPI_TOKEN"

      - name: Attach artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
